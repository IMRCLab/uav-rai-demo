name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # recursively checkout all submodules
        submodules: 'recursive'

    - name: install dependencies via apt
      run: |
        sudo apt update
        sudo apt install -y freeglut3-dev gnupg graphviz-dev libann-dev libassimp-dev libbullet-dev libeigen3-dev libf2c2-dev libfcl-dev libglew-dev libglfw3-dev libjsoncpp-dev liblapack-dev libopencv-dev libpng-dev libqhull-dev libx11-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}}/uav-rai-demo -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMARC_BUILD=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}